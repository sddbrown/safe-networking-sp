# ElasticSearch stats and counters
GET /sfn-dns-event/_stats/

########################################################
###              CREATE MAPPINGS
########################################################
PUT af-details
{
  "mappings": {
    "doc": {
      "dynamic": true,
      "properties": {
        "@version": {
          "type": "text",
          "fields": {
            "keyword": {
              "type": "keyword",
              "ignore_above": 256
            }
          }
        },
        "bucket_info": {
          "dynamic": true,
          "properties": {
            "minute_points": {
              "type": "integer"
            },
            "daily_points": {
              "type": "integer"
            },
            "minute_points_remaining": {
              "type": "integer"
            },
            "daily_points_remaining": {
              "type": "integer"
            }
          }
        }
      }
    }
  }
}


PUT sfn-details
{
  "mappings": {
    "doc": {
      "dynamic": true,
      "properties": {
        "type": {
          "type": "keyword"
        },
        "@timestamp": {
          "type": "date"
        },
        "@version": {
          "type": "text",
          "fields": {
            "keyword": {
              "type": "keyword",
              "ignore_above": 256
            }
          }
        },
        "name": {
          "type": "text",
          "fields": {
            "keyword": {
              "type": "keyword",
              "ignore_above": 256
            }
          }
        },
        "last_updated": {
          "type": "date",
          "format": "yyyy-MM-dd'T'HH:mm:ss'Z'||yyyy-MM-dd HH:mm:ss"
        },
        "create_time": {
          "type": "date",
          "format": "yyyy-MM-dd'T'HH:mm:ss'Z'||yyyy-MM-dd HH:mm:ss"
        },
        "sample_tag": {
          "dynamic": true,
          "properties": {
            "public_tag_name": {
              "type": "keyword"
            },
            "tag_name": {
              "type": "keyword"
            },
            "tag_class": {
              "type": "keyword"
            },
            "updated_at": {
              "type": "date",
              "format": "yyyy-MM-dd'T'HH:mm:ss'Z'||yyyy-MM-dd HH:mm:ss"
            }
          }
        },
        "sample_tags": {
          "type": "nested",
          "properties": {
            "public_tag_name": {
              "type": "keyword"
            },
            "tag_name": {
              "type": "keyword"
            },
            "tag_class": {
              "type": "keyword"
            },
            "updated_at": {
              "type": "date",
              "format": "yyyy-MM-dd'T'HH:mm:ss'Z'||yyyy-MM-dd HH:mm:ss"
            }
          }
        },
        "processed": {
          "type": "byte",
          "fields": {
            "keyword": {
              "type": "keyword",
              "ignore_above": 256
            }
          }
        }
      }
    }
  }
}

PUT sfn-dns-event
{
  "mappings": {
    "doc": {
      "dynamic": true,
      "properties": {
        "@timestamp": {
          "type": "date"
        },
        "@version": {
          "type": "text",
          "fields": {
            "keyword": {
              "type": "keyword",
              "ignore_above": 256
            }
          }
        },
        "device_name": {
          "type": "text",
          "fields": {
            "keyword": {
              "type": "keyword",
              "ignore_above": 128
            }
          }
        },
        "domain_name": {
          "type": "text",
          "fields": {
            "keyword": {
              "type": "keyword",
              "ignore_above": 256
            }
          }
        },
        "dst_ip": {
          "type": "ip",
          "fields": {
            "keyword": {
              "type": "keyword",
              "ignore_above": 256
            }
          }
        },
        "host": {
          "type": "text",
          "fields": {
            "keyword": {
              "type": "keyword",
              "ignore_above": 256
            }
          }
        },
        "msg_gen_time": {
          "type": "date",
          "format": "yyyy-MM-dd'T'HH:mm:ss'Z'||yyyy/MM/dd HH:mm:ss"
        },
        "last_updated": {
          "type": "date",
          "format": "yyyy-MM-dd'T'HH:mm:ss'Z'"
        },
        "sig_num": {
          "type": "integer",
          "fields": {
            "keyword": {
              "type": "keyword",
              "ignore_above": 256
            }
          }
        },
        "processed": {
          "type": "byte",
          "fields": {
            "keyword": {
              "type": "keyword",
              "ignore_above": 256
            }
          }
        },
        "received_at": {
          "type": "date"
        },
        "rule": {
          "type": "text",
          "fields": {
            "keyword": {
              "type": "keyword",
              "ignore_above": 256
            }
          }
        },
        "src_ip": {
          "type": "ip",
          "fields": {
            "keyword": {
              "type": "keyword",
              "ignore_above": 256
            }
          }
        },
        "geoip": {
          "dynamic": true,
          "properties": {
            "ip": {
              "type": "ip"
            },
            "location": {
              "type": "geo_point"
            },
            "latitude": {
              "type": "half_float"
            },
            "longitude": {
              "type": "half_float"
            }
          }
        },
        "event_tag": {
          "dynamic": true,
          "properties": {
            "public_name": {
              "type": "keyword"
            },
            "name": {
              "type": "keyword"
            },
            "class": {
              "type": "keyword"
            },
            "updated_at": {
              "type": "date",
              "format": "yyyy-MM-dd'T'HH:mm:ss'Z'||yyyy-MM-dd HH:mm:ss"
            },
            "confidence_level": {
              "type": "integer"
            }
          }
        },
        "threat_category": {
          "type": "text",
          "fields": {
            "keyword": {
              "type": "keyword",
              "ignore_above": 256
            }
          }
        },
        "threat_id": {
          "type": "text",
          "fields": {
            "keyword": {
              "type": "keyword",
              "ignore_above": 256
            }
          }
        },
        "threat_name": {
          "type": "text",
          "fields": {
            "keyword": {
              "type": "keyword",
              "ignore_above": 256
            }
          }
        }
      }
    }
  }
}

########################################################
###             END CREATE MAPPINGS
########################################################

########################################################
###               DELETE STUFF
########################################################
DELETE sfn-dns-event
DELETE sfn-dns-unknown
DELETE sfn-details
DELETE af-details

# Delete any doc that has a current processed value of 17.
# DON'T DO THIS WHILE SFN IS RUNNIG OR YOU WILL HOSE STUFF UP
POST sfn-details/_delete_by_query
{
  "query": {
    "match": {"processed": 17}
  }
}

# Delete any doc that has a current processed value of 17.
# DON'T DO THIS WHILE SFN IS RUNNIG OR YOU WILL HOSE STUFF UP
POST sfn-dns-event/_delete_by_query
{
  "query": {
    "match": {"processed": 1}
  }
}


########################################################
###             END DELETE STUFF
########################################################


########################################################
###                SFN-DNS-EVENT
########################################################

# Get mappings
GET sfn-dns-event


# Get all docs (random order and limited to top 10)
GET sfn-dns-event/_search


# Get all docs that are not processed (processed = 0)
# Sort by newest first and limited to top 10
GET sfn-dns-event/_search
{
  "query": {
    "bool": {
      "must": [
        {
          "match": {
            "threat_category": "dns-wildfire"
          }
        },
        {
          "match": {
            "processed": "0"
          }
        }
      ]
    }
  },
  "sort": [
    {
      "@timestamp": {
        "order": "desc"
      }
    }
  ]
}


# Get all docs (processing started and may have failed - processed=17 -
# sort by newest first and limited to top 10)
GET sfn-dns-event/_search
{
  "query":{
    "bool": {
      "must": [
        {"match": {"threat_category": "dns"}},
        {"match": {"processed":"17"}}
     ]
    }
  },
  "sort": [
    {
      "received_at": {
        "order": "asc"
      }
    }
  ]
}


# Get all docs that are processed (processed = 1)
# Sort by last updated first and limited to top 1000
GET sfn-dns-event/_search
{
  "query": {
    "bool": {
      "must": [
        {
          "match": {
            "threat_category": "dns-wildfire"
          }
        },
        {
          "match": {
            "processed": "1"
          }
        }
      ]
    }
  },
  "size": 1000,
  "sort": [
    {
      "last_updated": {
        "order": "desc"
      }
    }
  ]
}


# Get all docs that are not processed correctly (processed = 55)
# Sort by newest first and limited to top 1000
GET sfn-dns-event/_search
{
  "query": {
    "bool": {
      "must": [
        {
          "match": {
            "threat_category": "dns-wildfire"
          }
        },
        {
          "match": {
            "processed": "55"
          }
        }
      ]
    }
  },
  "size": 1000,
  "sort": [
    {
      "@timestamp": {
        "order": "desc"
      }
    }
  ]
}

# Change all of the "stuck" event docs back to processed of 0 so they get 
# picked up again
POST sfn-dns-event/_update_by_query
{
  "script": {
    "source": "ctx._source.processed = 0",
    "lang": "painless"
  },
  "query": {
    "term": {
      "processed": 17
    }
  }
}
########################################################
###          END SFN-DNS-EVENT 
########################################################


########################################################
###          SFN-DNS-DETAILS
########################################################
# Get mappings
GET sfn-details

# Get all docs (random order and limited to top 10)
GET sfn-details/_search


# Get all docs (ordered by newest first and limited to 1000)
GET sfn-details/_search
{
  "query": {
    "match_all":{}
  },
  "size": 1000,
  "sort": [
    {
      "last_updated": {
        "order": "desc"
      }
    }
  ]
}


# Get all tag-docs (ordered by newest first and limited to 1000)
GET sfn-details/_search
{
  "query": {
    "match":{"type": "tag-doc"}
    
  },
  "size": 1000,
  "sort": [
    {
      "last_updated": {
        "order": "desc"
      }
    }
  ]
}

# Get all domain-docs (ordered by newest first and limited to 1000)
GET sfn-details/_search
{
  "query": {
    "match":{"type": "domain-doc"}
    
  },
  "size": 1000,
  "sort": [
    {
      "last_updated": {
        "order": "desc"
      }
    }
  ]
}

# Get tag-docs with name matching domain entered
GET sfn-details/_search
{
  "query": {
    "bool": {
      "must": [
        {
          "term": {
            "type": "tag-doc"
          }
        },
        {
          "term": {
            "name.keyword": "Backdoor.unskal"
          }
        }
      ]
    }
  }
}

# Get docs where tmll.hopto.org (domain) is in doc and 
# sample_tags[tag_class] is "malware_family" - there should be only one
GET sfn-details/_search?q=tmll.hopto.org
{
  "query": {
    "nested": {
      "path": "sample_tags",
      "query": {
        "bool": {
          "must": [
            {
              "match": {
                "sample_tags.tag_class": "malware_family"
              }
            }
          ]
        }
      }
    }
  }
}

# Get docs where sample_tags[tag_class] is "malware_family"
# Returns any doc with that in it
GET sfn-details/_search
{
  "query": {
    "nested": {
      "path": "sample_tags",
      "query": {
        "bool": {
          "must": [
            {
              "match": {
                "sample_tags.tag_class": "malware_family"
              }
            }
          ]
        }
      },
      "inner_hits": { 
        "highlight": {
          "fields": {
            "sample_tags.tag_class": {}
          }
        }
      }
    }
  }
}


# Get number of representative details docs.  If any of these
# are more than 1, we have created too many and needs to be dealt with
GET sfn-details/_search
{
    "aggs" : {
        "domain-details" : {
            "terms" : { 
              "field" : "name.keyword", 
              "size":10000
            }
        }
    },
    "size" : 0
}


# Get number of representative tag-docs.  If any of these
# are more than 1, we have created too many and needs to be dealt with
GET sfn-details/_search
{
    "aggs" : {
        "tags-details" : {
            "terms" : { "field" : "name.keyword", "size":10000 }
        }
    },
    "size" : 0,
    "query": {
      "match":{"type": "tag-doc"}
    }
}


# Get number of representative domain-docs.  If any of these
# are more than 1, we have created too many and needs to be dealt with
GET sfn-details/_search
{
    "aggs" : {
        "tags-details" : {
            "terms" : { "field" : "name.keyword", "size":10000 }
        }
    },
    "size" : 0,
    "query": {
      "match":{"type": "domain-doc"}
    }
}


# Get details doc where name matches entry
# Could be domain or tag depending on what is entered as "name" value
GET sfn-details/_search
{
  "query": {
    "bool": {
       "must": [{"match": {"name.keyword": "2lbwbl.mxp4101.com"}}]
    }
  }
}


# Get all docs (processing started and may have failed - processed=17 -
# sort by newest first and limited to top 10)
GET sfn-details/_search
{
  "query":{
    "bool": {
      "must": [
        {"match": {"processed":"1"}}
     ]
    }
  },
  "sort": [
    {
      "create_time": {
        "order": "asc"
      }
    }
  ]
}





# Example push of info to a new domain-doc
POST sfn-details
{
  "type": "domain-doc",
  "domain_name": "mudsk.ddns.net",
  "last_updated": "2017/12/15 22:02:47",
  "processed": 0
}

########################################################
###        END SFN-DNS-DETAILS
########################################################


########################################################
###         SFN-DNS-UNKNOWN
########################################################

# Get all docs (random order limited to top 10)
GET sfn-dns-unknown/_search 
{
  "query": {
    "match_all": {}
  }
}


# Get all docs (ordered by newest first and limited to top 1000)
GET sfn-dns-unknown/_search
{
  "query": {
    "match_all": {}
  },
  "size": 1000,
  "sort": [
    {
      "@timestamp": {
        "order": "desc"
      }
    }
  ]
}


# Example push of info to a new unknown doc
POST sfn-dns-unknown/doc 
{
  "@timestamp":"2020-12-06T13:22:13.000Z",
               "host":"192.168.86.140",
        "device_name": "PA-VM",
               "rule":"ScriptGen - Endpoint DNS",
        "domain_name": "privatemail.website",
            "sig_num": "3800081",
    "threat_category":"dns-wildfire",
          "processed": "0"

}

########################################################
###             END SFN-DNS-UNKNOWN
########################################################

GET af-details
GET af-details/_search
{
  "query": {
    "match_all": {}
  }
}

}