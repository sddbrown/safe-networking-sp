input {
  http {
    host => "CHANGE ME"
    port => '9563'
    response_headers => {
      "Access-Control-Allow-Origin" => "*"
      "Content-Type" => "text/plain"
      "Access-Control-Allow-Headers" => "Origin, X-Requested-With, Content-Type, Accept"
    }
  }
}

filter {
  if [threat_id] =~ "^Suspicious DNS Query" {
    grok {
      match => {"threat_id" => "^Suspicious DNS Query \(%{DATA:[threat_name]}:?.%{HOSTNAME:[domain_name]}\)\(%{NUMBER:[sig_num]}\)"}
      add_field => [ "received_at", "%{@timestamp}" ]
      add_field => [ "processed", 0 ]
      add_field => [ "updated_at", "%{@timestamp}" ]
      add_tag => [ "SFN-DNS" ]
    }
    geoip {
      source => "dst_ip"
    }
    # jdbc_streaming {
    #   jdbc_driver_library => "/usr/pan/Downloads/sqlite-jdbc-3.21.0.jar"
    #   jdbc_driver_class => "com.mysql.jdbc.Driver"
    #   jdbc_connection_string => ""jdbc:mysql://localhost:3306/mydatabase"
    #   jdbc_user => "me"
    #   jdbc_password => "secret"
    #   statement => "select * from WORLD.COUNTRY WHERE Code = :code"
    #   parameters => { "code" => "country_code"}
    #   target => "country_details"
    # }
  } 
  else {
    grok {
      match => {"threat_id" => "%{DATA:[threat_name]}:?.%{HOSTNAME:[domain_name]}\(%{NUMBER:[sig_num]}\)"}
      add_field => [ "received_at", "%{@timestamp}" ]
      add_field => [ "processed", 0 ]
      add_field => [ "updated_at", "%{@timestamp}" ]
      add_tag => [ "SFN-DNS" ]
    }
    geoip {
      source => "dst_ip"
    }
  } 
  date {
      match => [ "msg_gen_time", "yyyy/MM/dd HH:mm:ss"]
  }
  mutate { remove_field => [ "msg_gen_time","headers"] }
}


output {
  if "SFN-DNS" in [tags] {
    elasticsearch { 
      hosts => ["CHANGEME:9200"]
      index => ["sfn-dns-event"]
    }
    stdout { codec => rubydebug }
  }
  else if "_grokparsefailure" in [tags] {
    elasticsearch { 
      hosts => ["CHANGEME:9200"]
      index => ["sfn-dns-unknown"]
    }
    stdout { codec => rubydebug }
  }
  stdout { codec => rubydebug }
}

  
